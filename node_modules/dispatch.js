/*
 * Copyright 2010 Nicolas Lochet Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy of the License at
 *      
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License is
 * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 */
 
exports.inject = function (logger) {
	return {
		// build a new dispatch with given dependecies 
		build : function (chain) {
			return function (req, res) {
				logger.info(req.method+' '+req.url);
				chain({
					'req' : req,
					'res' : res
				});
			}
		}
		,
		chain : function (rules) {
			return function (updatable) {
				// run every rules
				for (i = 0, l = rules.length; i < l ; i++) {
					var o = rules[i];
					// if o is a valid rule we run it
					if (o.valid(updatable)) {
						// if no update of the content 
						if (! (updatable = o.run(updatable))) {
							break;
						}
					}
				}
			}
		}
		,
		rule : function (filter, action) {
			var valid;
			
			var str_or_rx = function (u) {return u.req.url.match(filter);}
			
			switch (typeof filter) {
				case 'boolean':
					valid = function() {return filter;}
					break;
				case 'function':
					valid = filter;
					break;
				case 'string': 
					valid = str_or_rx;
					break;	
				case 'object':
					if (filter instanceof RegExp){
						valid = str_or_rx;
						break;	
					}
				default:
					throw 'Unsupported filter';
			}
			
			return {
				'valid':valid,
				'run':action
			}
		}
	}
}
