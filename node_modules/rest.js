/*
 * Copyright 2012 Nicolas Lochet Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy of the License at
 *      
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License is
 * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 */

exports.inject = function (http_status, urlparser) {
	var type = 'application/json';
	return {
		build: function (root, biz, mapping) {
			var rx = /^(.+?)\/(.*)$/
			return function (req, res) {
				var parsed = urlparser(req.url.substring(root.length), true);
				parsed.pathname.replace(rx,function (_0,_1,_2) {					
					// find a matching entity type
					var entity_type = mapping[_1];
					function ok_200(data) {http_status(200)(res, type, data);}
					if (typeof entity_type != 'undefined') {
						var sub = {
							get: function (parsed, req, res) {
								// This URI contains an id
								if (_2.length > 0) { biz.on(entity_type).getOne(_2, ok_200); }
								// Retrieve all objects that matches the query 
								else { biz.on(entity_type).getAll(parsed.query, ok_200); }
							},
							head: function(parsed, req, res) {
								throw 'unimplemented';
							},
							post: function(parsed, req, res) {
								var obj = undefined;
								req.on('data', function (data) {
									obj=JSON.parse(data);
									biz.on(entity_type).create(obj, function(id) { http_status(201)(res, type, '"'+id+'"');});
								});
								req.on('end', function () { if (!obj) { http_status(500)(res); } });
							},
							put: function (parsed, req, res) {
								throw 'unimplemented';
							},
							delete: function (parsed, req, res) {
								throw 'unimplemented';
							}	
						}
						sub[req.method.toLowerCase()](parsed, req, res);
					}
					else { http_status(404)(res); }
				});
			}
		}
	}
}
